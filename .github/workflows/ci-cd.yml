name: Docker Image CI-CD


on:
  # schedule:
  #   - cron: '36 0 * * 0'

  push:
    branches: [ main , dev ]
    # Publish semver tags as releases.
    tags: [ 'v*' ]
  # pull_request:
  #   branches: [ main ]

  workflow_dispatch:
    inputs:
      tagname:
        description: 'the git tag for to build image '
        required: true

  workflow_call:
    inputs:
      tagname:
        description: 'the git tag for to build image '
        required: true
        type: string


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        if: ${{ github.event_name != 'workflow_dispatch' && github.event.inputs.tagname == '' && inputs.tagname == '' }}
        uses: actions/checkout@v2

      - name: Checkout repository for tag
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tagname != '' && inputs.tagname == '' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tagname }}

      - name: Checkout repository for tag
        if: ${{ inputs.tagname != '' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ inputs.tagname }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: build

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/bake-action@v1
        with:
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: build


